

SELECT ST_AsText(ST_Transform(ST_GeomFromText('POINT(103.8421581 1.3197289)',4326),3857)) As wgs_geom;
SELECT ST_AsText(ST_Transform(ST_GeomFromText('POINT(103.83431850981404 1.353664975577646)',4326),3857)) As wgs_geom;
SELECT ST_AsText(ST_Transform(ST_GeomFromText('POINT(103.83463824076635 1.3533394648595565)',4326),3857)) As wgs_geom;

SELECT st_distance(ST_Transform(ST_GeomFromText('POINT(103.83463824076635 1.3533394648595565)',4326),3857),ST_Transform(ST_GeomFromText('POINT(103.83431850981404 1.353664975577646)',4326),3857)) As wgs_geom;

SELECT ST_AsText(ST_Transform(ST_GeomFromText('POINT(`y` `x`)',4326),3857)), ST_Y("coordinates") as "y", ST_X("coordinates") as "x" from "outlets" As wgs_geom;


SELECT st_distance("coordinates",ST_GeomFromText('POINT(103.83431850981404 1.353664975577646)',4326)) from "outlets" As wgs_geom;

SELECT st_distance("coordinates"::geography,ST_GeomFromText('POINT(103.83431850981404 1.353664975577646)',4326)::geography) from "outlets" As wgs_geom;


select coordinates from "outlets";
select ST_X("coordinates") from "outlets";
select ST_SetSRID("coordinates",3857) from "outlets";
select ST_AsText("coordinates") from "outlets";
4326
long 103.8421581
lat 1.3197289


3857
x 11559656.16
y 146924.54




    const pivotCoordinate =  [1.353664975577646, 103.83431850981404]
    {"Y":150703.31645969203,"X":11558783.46337908}


    const pivotCoordinate2 =  [1.3533394648595565, 103.83463824076635]

{"Y":150667.07065930215,"X":11558819.055665882}






https://lucid.app/lucidchart/71168ced-34b0-4a48-87f0-1e3e77e8b6be/edit?invitationId=inv_ec5cf113-40a3-447b-b200-c752bf69b7b2

### Network / Controller

`npm run server-dev` run and watch server.

### Client

`npm run client-dev-build` build and watch client.

Features/Principles retained:

- Mapping of last known user of socketio session.
- Three Way Event: notify-request-serve secured route flow. server will not send intended data on first emit. Server will only signal to client there is fresh data, and client will have to present its token for the said data to be served.

Recurring Requirements:

[ ] If an invalid (revoked/ expired/ out-of-scope etc) token is presented, the server should notify the sender as such.
[ ] if a valid token is presented,

`createdb p4` create db

to read

[ ] https://github.com/facebook/react/issues/14476#issuecomment-471199055
